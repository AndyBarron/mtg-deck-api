import mongoose from 'mongoose';
import validator from 'validator';

export const USERNAME_REGEX = /^[A-Za-z0-9_-]{3,32}$/;

const fields = {
  email: {
    type: String,
    required: true,
    lowercase: true,
    select: false,
    validate: {
      validator: (value) => validator.isEmail(value),
      message: 'Invalid email address: "{VALUE}"',
    },
  },
  passwordHash: {
    type: String,
    required: true,
    select: false,
  },
  canonicalUsername: {
    type: String,
    unique: true,
    required: true,
    lowercase: true,
  },
  username: {
    type: String,
    required: true,
    match: USERNAME_REGEX,
    validate: {
      validator: function(v) {
        return this.canonicalUsername === v.toLowerCase();
      },
    },
  },
  joined: {
    type: Number,
    default: Date.now,
  },
};

const transform = (doc, ret) => {
  delete ret._id;
  delete ret.__v;
  delete ret.passwordHash;
}

const config = {
  collection: 'users',
  toJSON: { transform },
  toObject: { transform },
};

const schema = new mongoose.Schema(fields, config);
schema.statics.findByUsername = function(username) {
  const canonicalUsername = username.toLowerCase();
  return this.findOne({ canonicalUsername });
};

const model = mongoose.model('User', schema);

export default model;
